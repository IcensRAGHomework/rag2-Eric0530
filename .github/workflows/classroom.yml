name: Autograding Tests
'on':
  push:
    paths:
      - 'student_assignment.py'

jobs:
  autograding:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout student code
        uses: actions/checkout@v4

      - name: Download teacher's test repository
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT_TOKEN }}
        run: |
          git clone https://${{ secrets.ORG_PAT_TOKEN }}@github.com/IcensRAGHomework/assignment-tests-hw02.git temp-tests

      # Step 1: Cache requirements.txt
      - name: Cache requirements.txt
        id: cache-requirements
        uses: actions/cache@v3
        with:
          path: requirements.txt
          key: ${{ runner.os }}-requirements-${{ hashFiles('requirements.txt') }}

      # Step 2: Cache Python environment
      - name: Cache Python environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-env-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-env-

      # Step 3: Install dependencies if needed
      - name: Install dependencies
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Save updated Python environment to cache
      - name: Save updated Python environment
        if: steps.cache-env.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-env-${{ steps.cache-requirements.outputs.cache-hit }}

      # Step 5: Prepare tests
      - name: Prepare tests
        run: |
          source .venv/bin/activate
          cp temp-tests/test_assignment.py .
          cp temp-tests/*.pdf .
          cat test_assignment.py
      - name: Debug Python Environment
        run: |
          echo "Python Version:"
          .venv/bin/python --version || echo "Python binary not found!"
          echo "Installed packages:"
          .venv/bin/pip freeze || echo "pip freeze failed!"
          echo "Listing .venv directory:"
          ls -la .venv || echo ".venv directory not found!"

      # Step 6-1: Run tests and calculate score on question 1
      - name: Run tests and calculate score on question 1
        id: Hw02_Q1
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Case1
          command: '.venv/bin/python -m pytest test_assignment.py::test_hw02_1'
          timeout: 15
          max-score: 1

      # Step 6-2: Run tests and calculate score on question 2
      - name: Run tests and calculate score on question 2
        id: Hw02_Q2
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Case2
          command: '.venv/bin/python -m pytest test_assignment.py::test_hw02_2'
          timeout: 10
          max-score: 1

      - name: Debug Test Results
        run: |
          echo "Result for Case1: ${{ steps.Hw02_Q1.outputs.result || 0 }}"
          echo "Result for Case2: ${{ steps.Hw02_Q2.outputs.result || 0 }}"

      # Step 7: Autograding Reporter
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          HW02_Q1_RESULTS: "${{steps.Hw02_Q1.outputs.result}}"
          HW02_Q2_RESULTS: "${{steps.Hw02_Q2.outputs.result}}"
        with:
          runners: Hw02_Q1,Hw02_Q2
